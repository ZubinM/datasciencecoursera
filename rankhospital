rankhospital <- function(state, outcome, num){
  package<- read.csv("~/Desktop/data/outcome-of-care-measures.csv", colClasses="character")
  #Step1: Read the file and assign name
  #Step2: Test validity of state entry and outcome entries
  if(!any(state==package$State)){
      stop("Invalid State")}
  if(outcome=="heart attack"){
      col_id<- 11} else {
        if(outcome=="heart failure"){
          col_id<- 17} else{
            if(outcome=="pneumonia"){
              col_id<- 23} else{
              stop("Invalid Outcome")}}}
  #Step3: Subset the required information and identify the row index for minimimum
  table<- subset(package, package[,col_id]!=="Not Available" & package$State==state)
  table[,col_id]<- as.numeric(x=table[,col_id])
  #Step4: Order the results by hospital name
  order_table<- table[order(table[,col_id], table[,1])]
  max_rows<- nrow(order_table)
  #Step5: Return the minimum rate or number for it
  if(num == "best"){
    r_id<- 1} else {
      if(num == "worst"){
        r_id<- max_rows} else {
          if(num<1 || num>max_rows){
            print("NA")} else{
                order_table[r_id,1]}}}
}

rankhospital <- function(state, outcome, num = "best") {
  # read outcome
  data <- read.csv(file="outcome-of-care-measures.csv", colClasses = 'character')
  
  if(!any(state == data$State)) {
    stop('invalid state')
  }
  
  if(outcome == 'heart attack') {
    i <- 11
  }
  else if(outcome == 'heart failure') {
    i <- 17
  }
  else if(outcome == 'pneumonia') {
    i <- 23
  }
  else {
    stop('invalid outcome')
  }
   
  data.state <- data[data$State == state, ]
  data.state[, i] <- as.numeric(x=data.state[, i])
  
  
  data.state <- data.state[complete.cases(data.state), ]
  
  # print(data.state[, c(2, i)])
  
  if(num == "best") {
    num = 1
  }
  else if(num == "worst") {
    num = nrow(data.state)
  }
  else if(is.numeric(x=num)) {
    # print(num)
    if(num<1 || num > nrow(data.state)) {
      return(NA)
    }
  }
  else {
    stop('invalid num')
  }
  
  
  # print(sort(data.state[, i]))
  
  data.state <- data.state[order(data.state[,i], data.state$Hospital.Name), ]
  
  return.names <- data.state[num, ]$Hospital.Name
  
  # print(return.names)
  
  return.names[1]
}
